package main

import (
	"fmt"

	"github.com/alitto/pond/v2"
)

func main() {

	// Create a pool with limited concurrency
	pool := pond.NewPool(10000)
	var count = 0
	var errCount = 0

	var err error
	// Submit 1000 tasks
	for i := 0; i < 100000; i++ {
		err = pool.SubmitErr(func() error {
			count = count + 1
			return fmt.Errorf("error count on index: %d", i)
		})
		if err != nil {
			errCount = errCount + 1
		}

	}

	// Stop the pool and wait for all submitted tasks to complete
	pool.StopAndWait()
	fmt.Println("count: ", count)
	fmt.Println("errCount: ", errCount)
	fmt.Println("
}
